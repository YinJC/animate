% Copyright 2007 Alexander Grahn

% This material is subject to the LaTeX Project Public License. See
%   http://www.ctan.org/tex-archive/help/Catalogue/licenses.lppl.html
% for the details of that license.

% Package for creating portable, JavaScript driven animations from sets of
% graphics files or inline graphics (e. g. LaTeX-picture, PSTricks,
% pgf/TikZ, ...)

% makes use of OCGs (Optional Content Groups, aka PDF Layers)

% Supports LaTeX->dvips->ps2pdf or pdfLaTeX workflows.

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{animate}[2007/05/31]
\RequirePackage{keyval}
\RequirePackage{ifthen}
\RequirePackage{ifpdf}
\RequirePackage{calc}

\DeclareOption*{}\ProcessOptions*\relax %allow anything as option
%(package options will be processed near end of this file)

\ifpdf
  %load MP to PDF converter
  \ifx\convertMPtoPDF\@undefined%
    \InputIfFileExists{supp-pdf}{}{}%
    \ifx\convertMPtoPDF\@undefined%
      \PackageWarningNoLine{animate}{%
        File `supp-pdf.tex', which is part of ConTeXt, is not available.%
        \MessageBreak%
        Therefore, MetaPost generated PS files cannot be embedded.%
      }%
    \fi%
  \fi%
\else
  %define `?pdfmark' operator as in file hdvips.def from package `hyperref'
  \AtBeginDvi{%
    \ifx\pdfmark\@undefined%
      \special{!
        systemdict /pdfmark known%
        {%
          userdict /?pdfmark systemdict /exec get put%
        }{%
          userdict /?pdfmark systemdict /pop get put
          userdict /pdfmark systemdict /cleartomark get put%
        }%
        ifelse%
      }%
    \fi%
  }
\fi%

%testing for correct pdfTeX version
\ifpdf
  \ifnum\pdftexversion<120
    \PackageError{animate}{%
      pdfeTeX, version >= 1.20, required%
    }{%
      Install a newer version!%
    }%
  \fi
\fi

%creating and using global definitions
\def\@anim@newkey#1#2{{\expandafter\xdef\csname#1\endcsname{#2}}}
\def\@anim@getkeyval#1{\csname#1\endcsname}

%missing package error message
\def\@anim@missing#1{%
  \PackageError{animate}{%
    Package `#1' has not been loaded yet%
  }{%
    Put the line\MessageBreak%
    `\protect\usepackage{#1}'\MessageBreak%
    to the preamble of your document!%
  }%
}

\newcount\@anim@resnum % counter for content resources
\global\@anim@resnum=0

%add OCProperties dict to Catalog
\ifpdf
  \newcount\@anim@@ocgs
  \pdfobj reserveobjnum
  \@anim@@ocgs=\pdflastobj
  \newcount\@anim@@posterocgs
  \pdfobj reserveobjnum
  \@anim@@posterocgs=\pdflastobj
  \pdfcatalog{
    /OCProperties <<
        /OCGs \the\@anim@@ocgs\space 0 R
        /D <</BaseState/OFF /ON \the\@anim@@posterocgs\space 0 R
		/Order \the\@anim@@ocgs\space 0 R>>
    >>
  }
  \def\@anim@ocgs{}
  \def\@anim@posterocgs{}
  \AtEndDocument{%
    \immediate\pdfobj useobjnum \@anim@@ocgs {%
      [\@anim@ocgs]%
    }%
    \immediate\pdfobj useobjnum \@anim@@posterocgs {%
      [\@anim@posterocgs]%
    }%
  }%
\else
  \newcount\@anim@occnt % counter for optional content groups
  \global\@anim@occnt=0
  \special{ps:
    % array which takes all ocgs (one per animation frame)
    mark /_objdef {@anim@ocgs} /type/array /OBJ pdfmark
    % array which takes ocgs shown by default (the poster frames)
    mark /_objdef {@anim@posterocgs} /type/array /OBJ pdfmark
    mark {Catalog} <<
      /OCProperties <<
        /OCGs {@anim@ocgs}
        /D <</BaseState/OFF /ON {@anim@posterocgs} /Order {@anim@ocgs}>>
      >>
    >> /PUT pdfmark
  }
\fi

\newbox\@anim@box %stores animation frames
\newdimen\@anim@tmpdima %length register for occasional use

%creates Form XObject from graphics file
\def\@anim@pt{pt}
\ifpdf
  \def\@anim@ximage#1#2#3{%#1:@anim@num, #2:@anim@curframe@zb, #3:filename
    \IfFileExists{#3}{}{%
      \PackageError{animate}{File `#3' cannot be opened for embedding.}{}%
    }%
    %store file in a box
    \def\@anim@mps{.mps}%
    \ifx\@anim@ext\@anim@mps%
      \global\setbox\@anim@box=\hbox{\convertMPtoPDF{#3}{1}{1}}%
    \else%
      \immediate\pdfximage{#3}%
      \global\setbox\@anim@box=\hbox{\pdfrefximage\pdflastximage}%
    \fi
    %delegate Form XObject creation
    \@anim@xinline{#1}{#2}{\@anim@box}%
  }
\else
  \def\@anim@ximage#1#2#3{%
    \IfFileExists{#3}{}{%
      \PackageError{animate}{File `#3' cannot be opened for embedding.}{}%
    }%
    %store file in a box
    \edef\@anim@curfile{{#3}}%
    \global\setbox\@anim@box=\hbox{\expandafter\includegraphics\@anim@curfile}%
    %delegate Form XObject creation
    \@anim@xinline{#1}{#2}{\@anim@box}%
  }
\fi

%creates Form XObject from box contents and associates it with a newly created
%OCG
\ifpdf
  \def\@anim@xinline#1#2#3{%#1:@anim@num, #2:@anim@curframe@zb, #3:box number
    %new ocg
    \immediate\pdfobj{<</Type/OCG /Name (#1.#2)>>}%
    \xdef\@anim@curocg{\the\pdflastobj\space 0 R}%
    %append to ocg array
    \xdef\@anim@ocgs{\@anim@ocgs\space\@anim@curocg}%
    %store ref to ocg if it's a poster
    \ifnum#2=0%
      \def\@anim@posterframe{first}%
    \else%
      \def\@anim@posterframe{last}%
    \fi%
    \ifx\@anim@poster\@anim@posterframe%
      \xdef\@anim@posterocg{\@anim@curocg}%
    \fi%
    \ifnum#2=0% measuring the size of the box (first frame only)
      \xdef\@anim@animwidth{\strip@pt\wd#3}%
      \xdef\@anim@animheight{\strip@pt\ht#3}%
      \xdef\@anim@animdepth{\strip@pt\dp#3}%
      \setlength{\@anim@tmpdima}{\ht#3}%
      \addtolength{\@anim@tmpdima}{\dp#3}%
      \xdef\@anim@animtotalheight{\strip@pt\@anim@tmpdima}%
      \gdef\@anim@properties{}%
      \gdef\@anim@xobject{}%
      \gdef\@anim@content{}%
    \fi%
    %put graphics into XObject
    \immediate\pdfxform #3%
    %compose resources for use in container XObject
    \xdef\@anim@properties{%
      \@anim@properties\space/oc\the\@anim@resnum\space\@anim@curocg
    }%
    \xdef\@anim@xobject{%
      \@anim@xobject\space/im\the\@anim@resnum\space\the\pdflastxform\space 0 R%
    }%
    %compose content stream of container XObject
    \xdef\@anim@content{%
      \@anim@content\space
      /OC/oc\the\@anim@resnum\space
      BDC q /im\the\@anim@resnum\space Do Q EMC%
    }%
    \global\advance\@anim@resnum by 1% increment resource number
  }
\else
  \def\@anim@xinline#1#2#3{%
    \special{ps:
      %new ocg
      mark /_objdef {@anim@ocg@\the\@anim@occnt} /type/dict /OBJ pdfmark
      mark {@anim@ocg@\the\@anim@occnt} <<
        /Type/OCG /Name (#1.#2)
      >> /PUT pdfmark
      %append to ocg array
      mark {@anim@ocgs} {@anim@ocg@\the\@anim@occnt} /APPEND pdfmark
    }%
    %store ref to ocg if it is a poster
    \ifnum#2=0%
      \def\@anim@posterframe{first}%
    \else%
      \def\@anim@posterframe{last}%
    \fi%
    \ifx\@anim@poster\@anim@posterframe%
      \xdef\@anim@posterocg{@anim@ocg@\the\@anim@occnt}%
    \fi%
    \ifnum#2=0%
      \xdef\@anim@animwidth{\strip@pt\wd#3}%
      \xdef\@anim@animheight{\strip@pt\ht#3}%
      \xdef\@anim@animdepth{\strip@pt\dp#3}%
      \setlength{\@anim@tmpdima}{\ht#3}%
      \addtolength{\@anim@tmpdima}{\dp#3}%
      \xdef\@anim@animtotalheight{\strip@pt\@anim@tmpdima}%
      \gdef\@anim@properties{}%
      \gdef\@anim@xobject{}%
      \gdef\@anim@content{}%
    \fi%
    \edef\@anim@oldunitlength{\the\unitlength}% make backup
    \setlength{\unitlength}{1pt}%
    %mark BBox of the graphics
    \begin{picture}(0,0)%
    \put(0,-\@anim@animdepth){%
      \special{ps:
        currentpoint /frame@lly exch def /frame@llx exch def
      }%
    }%
    \put(\@anim@animwidth,\@anim@animheight){%
      \special{ps:
        currentpoint /frame@ury exch def /frame@urx exch def
      }%
    }%
    \end{picture}%
    \setlength{\unitlength}{\@anim@oldunitlength}% restore previous unitlength
    %distill graphics into XObject
    \special{ps:
      gsave
      mark
        /_objdef {@anim@frm@\the\@anim@occnt}
        /BBox [frame@llx frame@lly frame@urx frame@ury]
      /BP pdfmark
      %flip around horizontal axis
      { [1 0 0 -1 0 frame@lly frame@ury add ] concat } ?pdfmark
    }%
    \begin{picture}(0,0)%
      \put(0,0){\box#3}%
    \end{picture}%
    \special{ps:
      mark /EP pdfmark
      grestore
    }%
    %compose resources for use in container XObject
    \xdef\@anim@properties{%
      \@anim@properties\space/oc\the\@anim@resnum\space
      {@anim@ocg@\the\@anim@occnt}%
    }%
    \xdef\@anim@xobject{%
      \@anim@xobject\space/im\the\@anim@resnum\space
      {@anim@frm@\the\@anim@occnt}%
    }%
    %compose content stream of container XObject
    \xdef\@anim@content{%
      \@anim@content\space
      /OC/oc\the\@anim@resnum\space
      BDC q /im\the\@anim@resnum\space Do Q EMC%
    }%
    \global\advance\@anim@occnt by 1% increment ocg counter
    \global\advance\@anim@resnum by 1% increment resource number
  }
\fi

%create XObject which contains all frames of the sequence
\ifpdf
  \def\@anim@makecontainer#1{%
    \edef\@anim@oldunitlength{\the\unitlength}% make backup
    \setlength{\unitlength}{1pt}%
    \global\setbox\@anim@box=\hbox{%
	  \pdfliteral{q}%
      \begin{picture}(%
        \@anim@animwidth,\@anim@animtotalheight%
      )(%
        0,-\@anim@animdepth%
      )%
      \end{picture}%
	  \pdfliteral{Q\@anim@content}%
    }%
    \setlength{\unitlength}{\@anim@oldunitlength}% restore previous unitlen
    \immediate\pdfxform resources {%
        /Properties <<\@anim@properties>>
        /XObject <<\@anim@xobject>>
	}\@anim@box%
    \xdef\@anim@container{\the\pdflastxform\space 0 R}%
    \global\@anim@resnum=0% reset resource number
  }
\else
  \def\@anim@makecontainer#1{%
    \special{ps:
      mark  /_objdef {@anim@xobj#1} /type/stream /OBJ pdfmark
      mark {@anim@xobj#1} (\@anim@content) /PUT pdfmark
      mark {@anim@xobj#1} <<
        /Type/XObject/Subtype/Form/FormType 1
        /BBox [frame@llx frame@lly frame@urx frame@ury]
        /Resources <<
          /Properties <<\@anim@properties>>
          /XObject <<\@anim@xobject>>
        >>
      >> /PUT pdfmark
    }%
    \global\@anim@resnum=0% reset resource number
  }
\fi

%create container XObjects for play & pause button faces;
\ifpdf
  \def\@anim@makeppcontainer#1#2{% #1: @anim@num, #2: Right or Left
    %OCGs
    \immediate\pdfobj{<</Type/OCG /Name (#1.Play#2)>>}%
    \edef\@anim@playocg{\the\pdflastobj\space 0 R}%
    \immediate\pdfobj{<< /Type/OCG /Name (#1.Pause#2)>>}%
    \edef\@anim@pauseocg{\the\pdflastobj\space 0 R}%
    %append to ocg array
    \xdef\@anim@ocgs{\@anim@ocgs\space\@anim@playocg\space\@anim@pauseocg}%
    %although not really necessary, append play button ocg to posterocg array
    \xdef\@anim@posterocgs{\@anim@posterocgs\space\@anim@playocg}%
    %new container XObject
    \immediate\pdfobj stream attr{%
      /Type/XObject/Subtype/Form/BBox [0 0 15 15]%
      /Resources <<%
        /Properties <</oc0 \@anim@playocg /oc1 \@anim@pauseocg>>%
        /XObject <<%
          /im0 \@anim@getkeyval{btnPlay#2}
          /im1 \@anim@getkeyval{btnPause#2}%
        >>%
      >>%
    }{%
      /OC/oc0 BDC q /im0 Do Q EMC /OC/oc1 BDC q /im1 Do Q EMC%
    }%
    \@anim@newkey{btn#1.PlayPause#2}{\the\pdflastobj\space 0 R}%
  }
\else
  \def\@anim@makeppcontainer#1#2{%
    \special{ps:
      %OCGs
      mark /_objdef {#1.Play#2} /type/dict /OBJ pdfmark
      mark {#1.Play#2} <<
        /Type/OCG /Name (#1.Play#2)
      >> /PUT pdfmark
      mark /_objdef {#1.Pause#2} /type/dict /OBJ pdfmark
      mark {#1.Pause#2} <<
        /Type/OCG /Name (#1.Pause#2)
      >> /PUT pdfmark
      %append to ocg array
      mark {@anim@ocgs} {#1.Play#2} /APPEND pdfmark
      mark {@anim@ocgs} {#1.Pause#2} /APPEND pdfmark
      %append play button ocg to posterocg array
      mark {@anim@posterocgs} {#1.Play#2} /APPEND pdfmark
      %new container XObject
      mark  /_objdef {btn#1.PlayPause#2} /type/stream /OBJ pdfmark
      mark {btn#1.PlayPause#2} (%
        /OC/oc0 BDC q /im0 Do Q EMC /OC/oc1 BDC q /im1 Do Q EMC%
      ) /PUT pdfmark
      mark {btn#1.PlayPause#2} <<
        /Type/XObject/Subtype/Form/FormType 1
        /BBox [0 0 15 15]
        /Resources <<%
          /Properties <</oc0 {#1.Play#2} /oc1 {#1.Pause#2}>>%
          /XObject <<%
            /im0 {btnPlay#2}
            /im1 {btnPause#2}%
          >>%
        >>%
      >> /PUT pdfmark
    }%
  }
\fi

%create XObjects of all button faces
\ifpdf
  %stroking commands
  \def\@anim@btnend{%
    2.5 w
    1 J
    1 j
    0 G
    10 10 130 130 re
    S
    10 w
    45 40 m
    95 75 l
    45 110 l
    S
    0 j
    105 44 m
    105 106 l
    S
  }
  \def\@anim@btnstep{%
    2.5 w
    1 J
    1 j
    0 G
    10 10 130 130 re
    S
    10 w
    50 40 m
    100 75 l
    50 110 l
    S
  }
  \def\@anim@btnplay{%
    2.5 w
    1 J
    1 j
    0 G
    10 10 130 130 re
    S
    10 w
    50 40 m
    50 110 l
    100 75 l
    h
    S
  }
  \def\@anim@btnpause{%
    2.5 w
    1 j
    0 G
    0 10 m
    140 10 l
    140 140 l
    0 140 l
    S
    20 w
    22 40 m
    22 110 l
    S
  }
  \def\@anim@btnminus{%
    2.5 w
    1 J
    1 j
    0 G
    10 10 130 130 re
    S
    10 w
    0 J
    40 75 m
    110 75 l
    S
  }
  \def\@anim@btnplus{%
    2.5 w
    1 J
    1 j
    0 G
    10 10 130 130 re
    S
    10 w
    0 J
    40 75 m
    110 75 l
    75 40 m
    75 110 l
    S
  }
  \def\@anim@btnreset{%
    2.5 w
    1 J
    1 j
    0 G
    10 10 130 130 re
    S
    10 w
    75 40 m
    75 110 l
    S
    0 g
    35 50 m
    70 75 l
    35 100 l
    f
    115 50 m
    80 75 l
    115 100 l
    f
    2 J
    0 j
    30 75 m
    35 75 l
    120 75 m
    115 75 l
    S
  }
  \def\@anim@makebuttons{%
    \@anim@xbutton{EndLeft}{%
      q -0.1 0 0 0.1 15 0 cm
      \@anim@btnend\space Q%
    }%
    \@anim@xbutton{EndRight}{%
      q 0.1 0 0 0.1 0 0 cm
      \@anim@btnend\space Q%
    }%
    \@anim@xbutton{Minus}{%
      q 0.1 0 0 0.1 0 0 cm
      \@anim@btnminus\space Q%
    }%
    \@anim@xbutton{PauseLeft}{%
      q -0.1 0 0 0.1 15 0 cm
      \@anim@btnpause\space Q%
    }%
    \@anim@xbutton{PauseRight}{%
      q 0.1 0 0 0.1 0 0 cm
      \@anim@btnpause\space Q%
    }%
    \@anim@xbutton{PlayLeft}{%
      q -0.1 0 0 0.1 15 0 cm
      \@anim@btnplay\space Q%
    }%
    \@anim@xbutton{PlayRight}{%
      q 0.1 0 0 0.1 0 0 cm
      \@anim@btnplay\space Q%
    }%
    \@anim@xbutton{Plus}{%
      q 0.1 0 0 0.1 0 0 cm
      \@anim@btnplus\space Q%
    }%
    \@anim@xbutton{Reset}{%
      q 0.1 0 0 0.1 0 0 cm
      \@anim@btnreset\space Q%
    }%
    \@anim@xbutton{StepLeft}{%
      q -0.1 0 0 0.1 15 0 cm
      \@anim@btnstep\space Q%
    }%
    \@anim@xbutton{StepRight}{%
      q 0.1 0 0 0.1 0 0 cm
      \@anim@btnstep\space Q%
    }%
  }
  %XObject creation
  \def\@anim@xbutton#1#2{% #1 name, #2 stroking commands
    \immediate\pdfobj stream attr{%
      /Type/XObject/Subtype/Form/BBox [0 0 15 15]%
    }{#2}%
    \@anim@newkey{btn#1}{\the\pdflastobj\space 0 R}%
  }
\else
  \def\@anim@btnend{%
    0 setgray
    0.25 setlinewidth
    1 setlinecap
    1 setlinejoin
    1 1 moveto
    14 1 lineto
    14 14 lineto
    1 14 lineto
    closepath
    stroke
    1 setlinewidth
    4.5 4 moveto
    9.5 7.5 lineto
    4.5 11 lineto
    stroke
    0 setlinejoin
    10.5 4.4 moveto
    10.5 10.6 lineto
    stroke
  }
  \def\@anim@btnstep{%
    0 setgray
    0.25 setlinewidth
    1 setlinecap
    1 setlinejoin
    1 1 moveto
    14 1 lineto
    14 14 lineto
    1 14 lineto
    closepath
    stroke
    1 setlinewidth
    5 4 moveto
    10 7.5 lineto
    5 11 lineto
    stroke
  }
  \def\@anim@btnplay{%
    0 setgray
    0.25 setlinewidth
    1 setlinecap
    1 setlinejoin
    1 1 moveto
    14 1 lineto
    14 14 lineto
    1 14 lineto
    closepath
    stroke
    1 setlinewidth
    5 4 moveto
    5 11 lineto
    10 7.5 lineto
    closepath
    stroke
  }
  \def\@anim@btnpause{%
    0 setgray
    0.25 setlinewidth
    0 setlinecap
    1 setlinejoin
    0 1 moveto
    14 1 lineto
    14 14 lineto
    0 14 lineto
    stroke
    2 setlinewidth
    2.2 4 moveto
    2.2 11 lineto
    stroke
  }
  \def\@anim@btnminus{%
    0 setgray
    0.25 setlinewidth
    1 setlinecap
    1 setlinejoin
    1 1 moveto
    14 1 lineto
    14 14 lineto
    1 14 lineto
    closepath
    stroke
    1.0 setlinewidth
    0 setlinecap
    4 7.5 moveto
    11 7.5 lineto
    stroke
  }
  \def\@anim@btnplus{%
    0 setgray
    0.25 setlinewidth
    1 setlinecap
    1 setlinejoin
    1 1 moveto
    14 1 lineto
    14 14 lineto
    1 14 lineto
    closepath
    stroke
    1.0 setlinewidth
    0 setlinecap
    4 7.5 moveto
    11 7.5 lineto
    7.5 4  moveto
    7.5 11 lineto
    stroke
  }
  \def\@anim@btnreset{%
    0 setgray
    0.25 setlinewidth
    1 setlinecap
    1 setlinejoin
    1 1 moveto
    14 1 lineto
    14 14 lineto
    1 14 lineto
    closepath
    stroke
    1 setlinewidth
    7.5 4 moveto
    7.5 11 lineto
    stroke
    0 setlinejoin
    3.5 5 moveto
    7 7.5 lineto
    3.5 10 lineto
    closepath
    fill
    11.5 5 moveto
    8 7.5 lineto
    11.5 10 lineto
    closepath
    fill
    1 setlinewidth
    2 setlinecap
    3 7.5 moveto
    3.5 7.5 lineto
    12 7.5 moveto
    11.5 7.5 lineto
    stroke
  }
  \def\@anim@makebuttons{%
    \@anim@xbutton{EndLeft}{%
      [-1 0 0 1 15 0] concat
      \@anim@btnend%
    }%
    \@anim@xbutton{EndRight}{%
      \@anim@btnend%
    }%
    \@anim@xbutton{Minus}{%
      \@anim@btnminus%
    }%
    \@anim@xbutton{PauseLeft}{%
      [-1 0 0 1 15 0] concat
      \@anim@btnpause%
    }%
    \@anim@xbutton{PauseRight}{%
      \@anim@btnpause%
    }%
    \@anim@xbutton{PlayLeft}{%
      [-1 0 0 1 15 0] concat
      \@anim@btnplay%
    }%
    \@anim@xbutton{PlayRight}{%
      \@anim@btnplay%
    }%
    \@anim@xbutton{Plus}{%
      \@anim@btnplus%
    }%
    \@anim@xbutton{Reset}{%
      \@anim@btnreset%
    }%
    \@anim@xbutton{StepLeft}{%
      [-1 0 0 1 15 0] concat
      \@anim@btnstep%
    }%
    \@anim@xbutton{StepRight}{%
      \@anim@btnstep%
    }%
  }
  \def\@anim@xbutton#1#2{% #1: name; #2: stroking commands
    \special{ps:
      gsave
      mark
        /_objdef {btn#1}
        /BBox [0 0 15 15]
      /BP pdfmark { #2 } ?pdfmark mark /EP pdfmark
      grestore
    }%
  }
\fi

%determines file type of the sequence
\ifpdf
  \def\@anim@getext#1{%
    \gdef\@anim@ext{.pdf}% we start with `pdf'
    \IfFileExists{#1\@anim@ext}{}{%
    \gdef\@anim@ext{.mps}%
    \IfFileExists{#1\@anim@ext}{}{%
    \gdef\@anim@ext{.png}%
    \IfFileExists{#1\@anim@ext}{}{%
    \gdef\@anim@ext{.jpg}%
    \IfFileExists{#1\@anim@ext}{}{%
    \gdef\@anim@ext{.jpeg}%
    \IfFileExists{#1\@anim@ext}{}{%
    \gdef\@anim@ext{.jbig2}%
    \IfFileExists{#1\@anim@ext}{}{%
    \gdef\@anim@ext{.jb2}%
    \IfFileExists{#1\@anim@ext}{}{%
      \PackageError{animate}{%
        Neither of the files\MessageBreak%
        `#1.pdf',\MessageBreak%
        `#1.mps',\MessageBreak%
        `#1.png',\MessageBreak%
        `#1.jpg',\MessageBreak%
        `#1.jpeg',\MessageBreak%
        `#1.jbig2' or\MessageBreak%
        `#1.jb2',\MessageBreak%
        could be found.\MessageBreak%
        Wrong file type? Mis-spelled file name?%
      }{}%
    }}}}}}}%
  }%
\else
  \def\@anim@getext#1{%
    \gdef\@anim@ext{.eps}% we start with `eps'
    \IfFileExists{#1\@anim@ext}{}{%
    \gdef\@anim@ext{.mps}%
    \IfFileExists{#1\@anim@ext}{}{%
    \gdef\@anim@ext{.ps}%
    \IfFileExists{#1\@anim@ext}{}{%
      \PackageError{animate}{%
        Neither of the files\MessageBreak%
        `#1.eps',\MessageBreak%
        `#1.mps' or\MessageBreak%
        `#1.ps'\MessageBreak%
        could be found.\MessageBreak%
        Wrong file type? Mis-spelled file name?%
      }{}%
    }}}%
  }%
\fi

%counts embedded animations
\newcount\@anim@num\@anim@num=0

%current frame
\newcount\@anim@curframe
\newcount\@anim@curframe@zb% zero based

\newboolean{@anim@buttonsmade} %true if button faces have been made
\setboolean{@anim@buttonsmade}{false}

%user command for embedding animation sequence
% #1: options
% #2: frame rate (fps)
% #3: basename of graphics file sequence (without frame number and extension)
% #4: first frame (integer)
% #5: last frame (integer)
\newcommand{\animategraphics}[5][]{%
  \leavevmode%
  \ifpdf\else%
    \ifx\includegraphics\@undefined\@anim@missing{graphics}\fi%
  \fi%
  \@anim@reset% to default settings
  \setkeys{anim@user}{#1}%
  \def\@anim@base{#3}%
  \def\@anim@first{#4}%
  \def\@anim@last{#5}%
  %
  \if@anim@controls%
    %create button faces if necessary
    \if@anim@buttonsmade\else%
      \@anim@makebuttons%
      \setboolean{@anim@buttonsmade}{true}%
    \fi%
	\if@anim@step\else%
      %combine Pause & Play button faces into one XObject
      \@anim@makeppcontainer{\the\@anim@num}{Right}%
      \@anim@makeppcontainer{\the\@anim@num}{Left}%
	\fi%  
  \fi%
  \xdef\@anim@fps{#2}% current frame rate
  \xdef\@anim@nfps{#2}% not used, actually, with `animategraphics'
  \xdef\@anim@pauseat{}%
  \xdef\@anim@nfpsat{}%
  \xdef\@anim@pfpsat{}%
  %
  %read all frames of the sequence
  \@anim@curframe=\@anim@first%
  \@anim@curframe@zb=0%
  \loop\ifnum\@anim@curframe>\@anim@last\else%
    %get file name extension of current file
    \@anim@getext{%
      \@anim@base\@anim@pad{\@anim@first}{\the\@anim@curframe}%
    }%
    %embed graphics
    \@anim@ximage{\the\@anim@num}{\the\@anim@curframe@zb}{%
      \@anim@base\@anim@pad{\@anim@first}{\the\@anim@curframe}\@anim@ext%
    }%
    \advance\@anim@curframe by 1%
    \advance\@anim@curframe@zb by 1%
    \xdef\@anim@frames{\the\@anim@curframe@zb}% total number
  \repeat%
  \@anim@makecontainer{\the\@anim@num}% create container XObject
  %insert animation widget & controls
  \vtop{%
    \offinterlineskip%
    \hbox{\@anim@animwidget{\the\@anim@num}}%
    \if@anim@controls%
      \setlength{\@anim@tmpdima}{\@anim@btnsize}%
      \setlength{\@anim@tmpdima}{0.1\@anim@tmpdima}%
      \vskip \@anim@tmpdima%
      \hbox to \@anim@animwidth\@anim@pt {%
        \hss%
        \@anim@buttonwidget{\the\@anim@num}{EndLeft}{EndLeft}%
        \@anim@buttonwidget{\the\@anim@num}{StepLeft}{StepLeft}%
        \if@anim@step\else%
          \@anim@buttonwidget{\the\@anim@num}{PlayPauseLeft}{%
            \the\@anim@num.PlayPauseLeft}%
          \@anim@buttonwidget{\the\@anim@num}{PlayPauseRight}{%
            \the\@anim@num.PlayPauseRight}%
        \fi%
        \@anim@buttonwidget{\the\@anim@num}{StepRight}{StepRight}%
        \@anim@buttonwidget{\the\@anim@num}{EndRight}{EndRight}%
        \if@anim@step\else%
          \setlength{\@anim@tmpdima}{\@anim@btnsize}%
          \setlength{\@anim@tmpdima}{0.3\@anim@tmpdima}%
          \hskip \@anim@tmpdima%
          \@anim@buttonwidget{\the\@anim@num}{Minus}{Minus}%
          \@anim@buttonwidget{\the\@anim@num}{Reset}{Reset}%
          \@anim@buttonwidget{\the\@anim@num}{Plus}{Plus}%
        \fi%
        \hss%
      }%
    \fi%
  }%
  \global\advance\@anim@num by 1%
}%

%calculates widget dimensions from natural ones, taking resizing options
%into account
\def\@anim@rescale{%
  %rescale height & depth
  \ifthenelse{%
    \NOT\equal{\@anim@boxheight}{}\AND%
    \NOT\equal{\@anim@boxdepth}{}%
  }{%
    \xdef\@anim@animheight{\@anim@boxheight}%
    \xdef\@anim@animdepth{\@anim@boxdepth}%
  }{%
    \ifthenelse{\NOT\equal{\@anim@boxheight}{}}{%
      \xdef\@anim@animheight{\@anim@boxheight}%
    }{%
      \ifthenelse{\NOT\equal{\@anim@boxdepth}{}}{%
        \xdef\@anim@animdepth{\@anim@boxdepth}%
      }{%if neither height nor depth are given but width is, rescale
        %ht & dp to keep aspect ratio
        \ifthenelse{\NOT\equal{\@anim@boxwidth}{}}{%
          \setlength{\@anim@tmpdima}{%
            \@anim@animheight\@anim@pt%
            *\ratio{\@anim@boxwidth\@anim@pt}{\@anim@animwidth\@anim@pt}%
          }\xdef\@anim@animheight{\strip@pt\@anim@tmpdima}%
          \setlength{\@anim@tmpdima}{%
            \@anim@animdepth\@anim@pt%
            *\ratio{\@anim@boxwidth\@anim@pt}{\@anim@animwidth\@anim@pt}%
          }\xdef\@anim@animdepth{\strip@pt\@anim@tmpdima}%
        }{}%
      }%
    }%
  }%
  \ifthenelse{\NOT\equal{\@anim@boxwidth}{}}{%rescale width
    \xdef\@anim@animwidth{\@anim@boxwidth}%
  }{%
    %if width is not given, but either height or depth are, scale
    %width to keep aspect ratio
    \ifthenelse{%
      \NOT\equal{\@anim@boxheight}{}\OR%
      \NOT\equal{\@anim@boxdepth}{}%
    }{%
      \setlength{\@anim@tmpdima}{%
        \@anim@animwidth\@anim@pt%
          *\ratio{%
             \@anim@animheight\@anim@pt+\@anim@animdepth\@anim@pt%
           }{\@anim@animtotalheight\@anim@pt}%
      }%
      \xdef\@anim@animwidth{\strip@pt\@anim@tmpdima}%
    }{}%
  }%
  %apply scaling factor
  \setlength{\@anim@tmpdima}{\@anim@animwidth\@anim@pt}%
  \setlength{\@anim@tmpdima}{\@anim@boxscale\@anim@tmpdima}%
  \xdef\@anim@animwidth{\strip@pt\@anim@tmpdima}%
  \setlength{\@anim@tmpdima}{\@anim@animheight\@anim@pt}%
  \setlength{\@anim@tmpdima}{\@anim@boxscale\@anim@tmpdima}%
  \xdef\@anim@animheight{\strip@pt\@anim@tmpdima}%
  \setlength{\@anim@tmpdima}{\@anim@animdepth\@anim@pt}%
  \setlength{\@anim@tmpdima}{\@anim@boxscale\@anim@tmpdima}%
  \xdef\@anim@animdepth{\strip@pt\@anim@tmpdima}%
}

%creates animation widget
\ifpdf
  \def\@anim@animwidget#1{%
    \@anim@rescale%
    %create JavaScript objects
    \@anim@pojscript{#1}% to be executed on PO event
    \@anim@otherjscript{#1}% on other events in the AA dict
    %add poster to posterocg array
    \def\@anim@posterframe{none}%
    \ifx\@anim@poster\@anim@posterframe\else%
      \xdef\@anim@posterocgs{\@anim@posterocgs\space\@anim@posterocg}%
    \fi
    \pdfannot
      width \@anim@animwidth\@anim@pt
      height \@anim@animheight\@anim@pt
      depth \@anim@animdepth\@anim@pt
    {%
      /Subtype/Widget%
      /F 4% allow printing
      /FT/Btn/Ff 65536% push button
      /BS <</W 0>>%
      /H/N%
      /AP <</N \@anim@container>>%
      /T (anm@#1)%
      /MK <<%
        /TP 1% icon, no caption
        /BG [\@anim@bg]%
        /IF <</SW/A/S/A>>% scale icon freely within widget
      >>%
      /AA <<% bind JavaScripts to trigger events
        /PO <</S/JavaScript/JS \@anim@pojscriptobj>>%
        \@anim@otherjscriptkey%
      >>%
    }%
    \hbox to \@anim@animwidth\@anim@pt {%
      \vrule width 0pt height \@anim@animheight\@anim@pt
             depth \@anim@animdepth\@anim@pt%
      \hss%
    }%
  }%
\else
  \def\@anim@animwidget#1{%
    \@anim@rescale%
    \edef\@anim@oldunitlength{\the\unitlength}%
    \setlength{\unitlength}{1pt}%
    %mark annotation rectangle
    \begin{picture}(0,0)%
      \put(0,-\@anim@animdepth){%
      \special{ps:
        currentpoint /wid@lly exch def /wid@llx exch def
      }%
    }%
    \put(\@anim@animwidth,\@anim@animheight){%
      \special{ps:
        currentpoint /wid@ury exch def /wid@urx exch def
      }%
    }%
    \end{picture}%
    \setlength{\unitlength}{\@anim@oldunitlength}%
    \@anim@pojscript{#1}%
    \@anim@otherjscript{#1}%
    \def\@anim@posterframe{none}%
    \ifx\@anim@poster\@anim@posterframe\else%
      \special{ps:
        mark {@anim@posterocgs} {\@anim@posterocg} /APPEND pdfmark
      }%
    \fi
    \special{ps:
      mark
        /Rect [wid@llx wid@lly wid@urx wid@ury]%
        /Subtype/Widget%
        /F 4%
        /FT/Btn/Ff 65536%
        /BS <</W 0>>%
        /H/N%
        /AP <</N {@anim@xobj#1}>>%
        /T (anm@#1)%
        /MK <<%
          /TP 1
          /BG [\@anim@bg]%
          /IF <</SW/A/S/A>>%
        >>%
        /AA <<%
          /PO <</S/JavaScript/JS {a#1@pojscript}>>%
          \@anim@otherjscriptkey%
        >>%
      /ANN pdfmark
    }%
    \hbox to \@anim@animwidth\@anim@pt {%
      \vrule width 0pt height \@anim@animheight\@anim@pt
             depth \@anim@animdepth\@anim@pt%
      \hss%
    }%
  }
\fi

%creates control button widget
\ifpdf
  \def\@anim@buttonwidget#1#2#3{%#1:@anim@num, #2:action, #3:button face XObject
    \@anim@upjscript{#1}{#2}% JavaScript actions for ButtonUp events
    %button size corresponds to current font size
    \setlength{\@anim@tmpdima}{\@anim@btnsize}%
    \hbox to \@anim@tmpdima {%
      \pdfannot
        width \@anim@tmpdima
        height \@anim@tmpdima
        depth 0pt
      {%
        /Subtype/Widget%
        /FT/Btn/Ff 65536% push button
        /BS <</W 0>>%
        /H/I%
        /AP <</N \@anim@getkeyval{btn#3}>>%
        /T (btn@#1@#2)%
        /MK <<%
          /TP 1%
          /BG [\@anim@btnbg]%
          /IF <</SW/A/S/A>>% scale button face icon freely within widget
        >>%
        /A <</S/JavaScript/JS (\@anim@upjscriptstring)>>%
      }%
      \vrule width 0pt height \@anim@tmpdima depth 0pt%
      \hss%
    }%
  }%
\else
  \def\@anim@buttonwidget#1#2#3{%
    \@anim@upjscript{#1}{#2}%
    \setlength{\@anim@tmpdima}{\@anim@btnsize}%
    \edef\@anim@oldunitlength{\the\unitlength}%
    \setlength{\unitlength}{1pt}%
    \begin{picture}(0,0)%
      \put(0,0){%
      \special{ps:
        currentpoint /wid@lly exch def /wid@llx exch def
      }%
    }%
    \put(\strip@pt\@anim@tmpdima,\strip@pt\@anim@tmpdima){%
      \special{ps:
        currentpoint /wid@ury exch def /wid@urx exch def
      }%
    }%
    \end{picture}%
    \setlength{\unitlength}{\@anim@oldunitlength}%
    \special{ps:
      mark
        /Rect [wid@llx wid@lly wid@urx wid@ury]
        /Subtype/Widget
        /FT/Btn/Ff 65536
        /BS <</W 0>>
        /H/I
        /AP <</N {btn#3}>>%
        /T (btn@#1@#2)%
        /MK <<
          /TP 1
          /BG [\@anim@btnbg]
          /IF <</SW/A/S/A>>
        >>%
        /A <</S/JavaScript/JS (\@anim@upjscriptstring)>>%
      /ANN pdfmark
    }%
    \hbox to \the\@anim@tmpdima {%
      \vrule width 0pt height \the\@anim@tmpdima\space depth 0pt%
        \hss%
    }%
  }
\fi

\newboolean{@anim@inside} % for checking whether we are inside the
\setboolean{@anim@inside}{false} %  `animateinline' environment
\newboolean{@anim@pauseframes} % true if \newframe* is being used
\newboolean{@anim@chfps} % true if \newframe or \newframe* is being used
                         % with optional `new frame rate' argument

%user environment for animating inline graphics
% #1: options
% #2: frame rate (fps)
\newenvironment{animateinline}[2][]{%
  \leavevmode%
  \setboolean{@anim@inside}{true}%
  \@anim@reset% to default settings
  \setkeys{anim@user}{#1}%
  %create button faces if necessary
  \if@anim@controls%
    \if@anim@buttonsmade\else%
      \@anim@makebuttons%
      \setboolean{@anim@buttonsmade}{true}%
    \fi%
	\if@anim@step\else%
      %combine Pause & Play button faces into one XObject
      \@anim@makeppcontainer{\the\@anim@num}{Right}%
      \@anim@makeppcontainer{\the\@anim@num}{Left}%
	\fi%  
  \fi%
  \xdef\@anim@fps{#2}%
  \xdef\@anim@nfps{#2}% current frame rate (for use in \newframe)
  \global\@anim@curframe@zb=0%
  \@anim@beginframe%
  \ignorespaces%
}{%
  \unskip%
  \@anim@endframe{\the\@anim@num}{\the\@anim@curframe@zb}%
  \global\advance\@anim@curframe@zb by 1%
  \xdef\@anim@frames{\the\@anim@curframe@zb}% total number
  \@anim@makecontainer{\the\@anim@num}% create container XObject
  %insert animation widget & controls
  \vtop{%
    \offinterlineskip%
    \hbox{\@anim@animwidget{\the\@anim@num}}%
    \if@anim@controls%
      \setlength{\@anim@tmpdima}{\@anim@btnsize}%
      \setlength{\@anim@tmpdima}{0.1\@anim@tmpdima}%
      \vskip \@anim@tmpdima%
      \hbox to \@anim@animwidth\@anim@pt {%
        \hss%
        \@anim@buttonwidget{\the\@anim@num}{EndLeft}{EndLeft}%
        \@anim@buttonwidget{\the\@anim@num}{StepLeft}{StepLeft}%
        \if@anim@step\else%
          \@anim@buttonwidget{\the\@anim@num}{PlayPauseLeft}{%
            \the\@anim@num.PlayPauseLeft}%
          \@anim@buttonwidget{\the\@anim@num}{PlayPauseRight}{%
            \the\@anim@num.PlayPauseRight}%
        \fi%
        \@anim@buttonwidget{\the\@anim@num}{StepRight}{StepRight}%
        \@anim@buttonwidget{\the\@anim@num}{EndRight}{EndRight}%
        \if@anim@step\else%
          \setlength{\@anim@tmpdima}{\@anim@btnsize}%
          \setlength{\@anim@tmpdima}{0.3\@anim@tmpdima}%
          \hskip \@anim@tmpdima%
          \@anim@buttonwidget{\the\@anim@num}{Minus}{Minus}%
          \@anim@buttonwidget{\the\@anim@num}{Reset}{Reset}%
          \@anim@buttonwidget{\the\@anim@num}{Plus}{Plus}%
        \fi%
        \hss%
      }%
    \fi%
  }%
  \global\advance\@anim@num by 1%
  \setboolean{@anim@inside}{false}%
}

%usercommand for use within `animateinline' environment;
%terminates the current frame and starts a new one
\def\newframe{%
  \unskip%
  \if@anim@inside\else%
    \PackageError{animate}{%
      \protect\newframe\space cannot be used outside `animateinline'%
      \MessageBreak environment%
    }{}%
  \fi%
  \@anim@endframe{\the\@anim@num}{\the\@anim@curframe@zb}%
  \@ifstar\@anim@newframestar\@anim@newframe%
}
\newcommand{\@anim@newframestar}[1][]{% starred variant to pause animation
  \if@anim@step\else%                 % #1: new frame rate
    %build JavaScript commands to fill the `pauseAt' array
    \xdef\@anim@pauseat{%
      \@anim@pauseat%
      a\the\@anim@num.pauseAt[\the\@anim@curframe@zb]=1;%
    }%
    \setboolean{@anim@pauseframes}{true}%
    \xdef\@anim@pfps{\@anim@nfps}%
    \xdef\@anim@nfps{#1}%
    \ifx\@anim@nfps\@empty%
      \xdef\@anim@nfps{\@anim@pfps}%
    \else%
      %build JavaScript commands to fill the `nFpsAt' & `pFpsAt' arrays
      \xdef\@anim@nfpsat{%
        \@anim@nfpsat%
        a\the\@anim@num.nFpsAt[\the\@anim@curframe@zb]=Math.abs(#1);%
      }%
      \xdef\@anim@pfpsat{%
        \@anim@pfpsat%
        a\the\@anim@num.pFpsAt[\the\@anim@curframe@zb]=Math.abs(\@anim@pfps);%
      }%
      \setboolean{@anim@chfps}{true}% change fps
    \fi%
  \fi%
  \global\advance\@anim@curframe@zb by 1%
  \@anim@beginframe%
  \ignorespaces%
}
\newcommand{\@anim@newframe}[1][]{% #1: new frame rate
  \if@anim@step\else%
    \edef\@anim@pfps{\@anim@nfps}%
    \edef\@anim@nfps{#1}%
    \ifx\@anim@nfps\@empty%
      \edef\@anim@nfps{\@anim@pfps}%
    \else%
      %build JavaScript commands to fill the `nFpsAt' & `pFpsAt' arrays
      \xdef\@anim@nfpsat{%
        \@anim@nfpsat%
        a\the\@anim@num.nFpsAt[\the\@anim@curframe@zb]=Math.abs(#1);%
      }%
      \xdef\@anim@pfpsat{%
        \@anim@pfpsat%
        a\the\@anim@num.pFpsAt[\the\@anim@curframe@zb]=Math.abs(\@anim@pfps);%
      }%
      \setboolean{@anim@chfps}{true}% change fps
    \fi%
  \fi%
  \global\advance\@anim@curframe@zb by 1%
  \@anim@beginframe%
  \ignorespaces%
}

%starts a new frame
\def\@anim@beginframe{%
  \begin{lrbox}{\@anim@box}% store the graphics in a box
}

%terminates current frame
\def\@anim@endframe#1#2{%
  \end{lrbox}%
  \message{< a#1, fr#2}%
  %determine size of graphics
  \ifnum #2=0%
    \xdef\@anim@animwidth{\strip@pt\wd\@anim@box}%
    \ifdim\wd\@anim@box=0pt%
      \PackageError{animate}{%
        Contents of first frame must not have zero width%
      }{%
        Possible reason: \protect\begin{animateinline}{...}
        immediately followed by \protect\newframe%
      }%
    \fi%
    \xdef\@anim@animheight{\strip@pt\ht\@anim@box}%
    \xdef\@anim@animdepth{\strip@pt\dp\@anim@box}%
    \ifdim\ht\@anim@box=0pt%
      \ifdim\dp\@anim@box=0pt%
        \PackageError{animate}{%
          Contents of first frame must not have zero height%
        }{}%
      \fi%
    \fi%
  \fi%
  %now create Form XObject of box contents
  \@anim@xinline{#1}{#2}{\@anim@box}%
  \message{>}%
}

%prints zero padded integers
% #1: arbitrary integer number as template specifying the
%     width, e. g. `987654' for a width of 6 digits
% #2: the number to be formatted (zero padded)
\def\@anim@pad#1#2{%
  \@anim@@pad{\@anim@template{0}{#1}}{#2}%
}
%low level macros used by \@anim@pad
\def\@anim@@pad#1#2{% #1: string of zeros specifying width, #2 number
  \ifnum1#2<1#1
    \@anim@@pad{#1}{0#2}%
  \else%
    #2%
  \fi%
}%
\def\@anim@template#1#2{% create template (stringed zeros) from given num
  \ifnum10#1<1#2
    \@anim@template{0#1}{#2}%
  \else%
    \ifnum10#1=1#2
      \@anim@template{0#1}{#2}%
    \else%
      #1%
    \fi%
  \fi%
}%

%command options
%setting the widget size
\define@key{anim@user}{width}{%
  \setlength{\@anim@tmpdima}{#1}%
  \xdef\@anim@boxwidth{\strip@pt\@anim@tmpdima}%
}
\define@key{anim@user}{height}{%
  \setlength{\@anim@tmpdima}{#1}%
  \xdef\@anim@boxheight{\strip@pt\@anim@tmpdima}%
}
\define@key{anim@user}{depth}{%
  \setlength{\@anim@tmpdima}{#1}%
  \xdef\@anim@boxdepth{\strip@pt\@anim@tmpdima}%
}
\define@key{anim@user}{scale}{%
  \gdef\@anim@boxscale{#1}%
}

\define@key{anim@user}{screenbg}{%background colour
  \gdef\@anim@bg{#1}%
}
\define@key{anim@user}{buttonsize}{%
  \gdef\@anim@btnsize{#1}%
}
\define@key{anim@user}{buttonbg}{%background of buttons
  \gdef\@anim@btnbg{#1}%
}
\newboolean{@anim@controls}
\setboolean{@anim@controls}{false}
\define@key{anim@user}{controls}[true]{%
  \setboolean{@anim@controls}{#1}%
}
\newboolean{@anim@loop}
\setboolean{@anim@loop}{false}
\define@key{anim@user}{loop}[true]{%
  \setboolean{@anim@loop}{#1}%
}
\newboolean{@anim@autoplay}
\setboolean{@anim@autoplay}{false}
\define@key{anim@user}{autoplay}[true]{%
  \setboolean{@anim@autoplay}{#1}%
  \if@anim@autoplay
  \setboolean{@anim@autoresume}{false}
  \fi%
}
\newboolean{@anim@autoresume}
\setboolean{@anim@autoresume}{false}
\define@key{anim@user}{autoresume}[true]{%
  \setboolean{@anim@autoresume}{#1}%
  \if@anim@autoresume\setboolean{@anim@autoplay}{false}\fi%
}
\newboolean{@anim@autopause}
\setboolean{@anim@autopause}{false}
\define@key{anim@user}{autopause}[true]{%
  \setboolean{@anim@autopause}{#1}%
}
\newboolean{@anim@palindrome}
\setboolean{@anim@palindrome}{false}
\define@key{anim@user}{palindrome}[true]{%
  \setboolean{@anim@palindrome}{#1}%
}
%default frame to be shown if animation is not activated
\define@key{anim@user}{poster}[first]{% | none | last
  \ifthenelse{% correct wrong input to `none'
    \equal{#1}{first}\OR%
    \equal{#1}{last}%
  }{%
    \gdef\@anim@poster{#1}%
  }{%
    \gdef\@anim@poster{none}%
  }%
}
\newboolean{@anim@step}
\setboolean{@anim@step}{false}
\define@key{anim@user}{step}[true]{%
  \setboolean{@anim@step}{#1}%
}

%macro to reset macros and booleans
\def\@anim@reset{%
  \gdef\@anim@boxscale{1.0}%
  \gdef\@anim@boxdepth{}%
  \gdef\@anim@boxheight{}%
  \gdef\@anim@boxwidth{}%
  \xdef\@anim@bg{\@anim@@bg}%
  \xdef\@anim@btnbg{\@anim@@btnbg}%
  \xdef\@anim@btnsize{\@anim@@btnsize}%
  \xdef\@anim@poster{\@anim@@poster}%
  \let\if@anim@controls=\if@anim@@controls%
  \let\if@anim@loop=\if@anim@@loop%
  \let\if@anim@autoplay=\if@anim@@autoplay%
  \let\if@anim@autoresume=\if@anim@@autoresume%
  \let\if@anim@autopause=\if@anim@@autopause%
  \let\if@anim@palindrome=\if@anim@@palindrome%
  \let\if@anim@step=\if@anim@@step%
  \gdef\@anim@posterocg{}%
  \setboolean{@anim@pauseframes}{false}%
  \gdef\@anim@pauseat{}%
  \setboolean{@anim@chfps}{false}%
  \gdef\@anim@nfpsat{}%
  \gdef\@anim@pfpsat{}%
}

%package options
\def\@anim@@bg{}%
\define@key{anim@pkg}{screenbg}{%
  \gdef\@anim@@bg{#1}%
}
\def\@anim@@btnsize{1.44em}%
\define@key{anim@pkg}{buttonsize}{%
  \gdef\@anim@@btnsize{#1}%
}
\def\@anim@@btnbg{}%
\define@key{anim@pkg}{buttonbg}{%
  \gdef\@anim@@btnbg{#1}%
}
\newboolean{@anim@@controls}
\setboolean{@anim@@controls}{false}%
\define@key{anim@pkg}{controls}[true]{%
  \setboolean{@anim@@controls}{#1}%
}
\newboolean{@anim@@loop}
\setboolean{@anim@@loop}{false}%
\define@key{anim@pkg}{loop}[true]{%
  \setboolean{@anim@@loop}{#1}%
}
\newboolean{@anim@@autoplay}
\setboolean{@anim@@autoplay}{false}
\define@key{anim@pkg}{autoplay}[true]{%
  \setboolean{@anim@@autoplay}{#1}%
  \if@anim@@autoplay\setboolean{@anim@@autoresume}{false}\fi%
}
\newboolean{@anim@@autoresume}
\setboolean{@anim@@autoresume}{false}
\define@key{anim@pkg}{autoresume}[true]{%
  \setboolean{@anim@@autoresume}{#1}%
  \if@anim@@autoresume\setboolean{@anim@@autoplay}{false}\fi%
}
\newboolean{@anim@@autopause}
\setboolean{@anim@@autopause}{false}
\define@key{anim@pkg}{autopause}[true]{%
  \setboolean{@anim@@autopause}{#1}%
}
\newboolean{@anim@@palindrome}
\setboolean{@anim@@palindrome}{false}
\define@key{anim@pkg}{palindrome}[true]{%
  \setboolean{@anim@@palindrome}{#1}%
}
\gdef\@anim@@poster{first}%
\define@key{anim@pkg}{poster}[first]{%
  \ifthenelse{%
    \equal{#1}{first}\OR%
    \equal{#1}{last}%
  }{%
    \gdef\@anim@@poster{#1}%
  }{%
    \gdef\@anim@@poster{none}%
  }%
}
\newboolean{@anim@@step}
\setboolean{@anim@@step}{false}
\define@key{anim@pkg}{step}[true]{%
  \setboolean{@anim@@step}{#1}%
}

%process package options
\def\@anim@setpkgkeys#1{\setkeys{anim@pkg}{#1}}
\edef\@anim@pkgopts{{\@ptionlist{\@currname.\@currext}}}
\expandafter\@anim@setpkgkeys\@anim@pkgopts

%JavaScript objects
%animation widget's PageOpen event
\ifpdf
  \def\@anim@pojscript#1{%
    \gdef\@anim@posterlast{last}%
    \gdef\@anim@posternone{none}%
    \immediate\pdfobj stream {\@anim@@pojscript{#1}}%
    \xdef\@anim@pojscriptobj{\the\pdflastobj\space 0 R}%
  }
\else
  \def\@anim@pojscript#1{%
    \gdef\@anim@posterlast{last}%
    \gdef\@anim@posternone{none}%
    \special{ps:
      mark /_objdef {a#1@pojscript} /type/stream /OBJ pdfmark
      mark {a#1@pojscript} (\@anim@@pojscript{#1}) /PUT pdfmark
    }%
  }
\fi
\def\@anim@@pojscript#1{% #1: @anim@num
%  console.show();%
%  console.clear();%
  if(typeof(a#1)=='undefined'){% initialize animation
    a#1=new Object();%
    %takes references to frame ocgs belonging to the current animation
    a#1.fr=new Array();%
    %takes references to control button face ocgs
    \if@anim@controls a#1.btn=new Array();\fi
    %get array of ocgs of current page
    var ocg=this.getOCGs(this.pageNum);%
    for(var i=0;i<ocg.length;i++){%
      var ocgName=ocg[i].name.split('.');%
      if(ocgName[0]==#1){%
        \if@anim@controls
          if(ocgName[1].charAt(0)=='P'){% PlayLeft, PauseLeft, ...
            a#1.btn[ocgName[1]]=ocg[i];%
            %set basic button state
            a#1.btn[ocgName[1]].state=ocg[i].initState;%
          }else{% frame ocg
        \fi
            a#1.fr[ocgName[1]]=ocg[i];%
            %set basic frame state
            a#1.fr[ocgName[1]].state=ocg[i].initState;%
        \if@anim@controls%
          }%
        \fi%
      }%
    }%
    \ifx\@anim@poster\@anim@posterlast % set default frame
      %holds index of the frame to be displayed
      a#1.idx=\@anim@frames-1;%
    \else % first & none
      a#1.idx=0;%
    \fi%
    %playing state and direction
    \if@anim@step%
      \if@anim@palindrome
        a#1.playsRight=true;%
      \fi%
    \else
      a#1.isPlaying=false;%
      a#1.playsRight=true;%
      a#1.isPaused=false;%
      \if@anim@pauseframes
        %this array takes the frame numbers at which to pause playback
        a#1.pauseAt=new Array();%
        \@anim@pauseat%
      \fi%
      \if@anim@chfps
        %arrays that take frame numbers (array index) and fps values
        a#1.nFpsAt=new Array();%
        \@anim@nfpsat%
        a#1.pFpsAt=new Array();%
        \@anim@pfpsat%
        a#1.fpsDeflt=Math.abs(\@anim@fps);%
      \fi
      a#1.dtDeflt=1000/(1e-6+Math.abs(\@anim@fps));%
      a#1.dt=a#1.dtDeflt;%
    \fi%
    %actions
    a#1.actnEndLeft=function(){%
      var curIdx=a#1.idx;%
      \if@anim@step\else
        a#1.actnPause();%
        a#1.isPaused=false;% because it has been explicitly stopped
      \fi
      a#1.idx=0;%
      a#1.fr[curIdx].state=false;%
      a#1.fr[0].state=true;%
      \if@anim@chfps
        a#1.fpsDeflt=Math.abs(\@anim@fps);%
        a#1.dtDeflt=1000/(1e-6+a#1.fpsDeflt);%
        a#1.dt=a#1.dtDeflt;%
      \fi%
    };%
    a#1.actnEndRight=function(){%
      var curIdx=a#1.idx;%
      \if@anim@step\else
        a#1.actnPause();%
        a#1.isPaused=false;%
      \fi
      a#1.idx=\@anim@frames-1;%
      a#1.fr[curIdx].state=false;%
      a#1.fr[a#1.idx].state=true;%
      \if@anim@chfps %frame rate from the last fps change (\@anim@nfps)
        a#1.fpsDeflt=Math.abs(\@anim@nfps);%
        a#1.dtDeflt=1000/(1e-6+a#1.fpsDeflt);%
        a#1.dt=a#1.dtDeflt;%
      \fi%
    };%
    a#1.actnNext=function(){%
      var curIdx=a#1.idx;%
      \if@anim@palindrome
        if(a#1.idx==\@anim@frames-1){%
          \if@anim@step
            a#1.playsRight=false;%
          \else
            if(a#1.isPlaying){a#1.isPaused=true;a#1.actnPlayLeft();}%
          \fi%
        }else{%
          a#1.idx++;%
        }%
      \else
        if(a#1.idx==\@anim@frames-1){%
          \if@anim@step\else%
            \if@anim@loop
              if(a#1.isPlaying){%
                \if@anim@chfps
                  a#1.fpsDeflt=Math.abs(\@anim@fps);%
                  a#1.dtDeflt=1000/(1e-6+a#1.fpsDeflt);%
                  a#1.dt=a#1.dtDeflt;%
                \fi
                a#1.actnPlayRight();%
              }%
            \else
              a#1.actnEndRight();%
            \fi%
          \fi%
        }else{%
          a#1.idx++;%
        }%
      \fi
      a#1.fr[curIdx].state=false;%
      a#1.fr[a#1.idx].state=true;%
      \if@anim@step\else%
        \if@anim@chfps
          if(%
            a#1.nFpsAt[a#1.idx]>=0&&%
            a#1.nFpsAt[a#1.idx]!=a#1.fpsDeflt%
          ){%
            a#1.fpsDeflt=a#1.nFpsAt[a#1.idx];%
            a#1.dtDeflt=1000/(1e-6+a#1.fpsDeflt);%
            a#1.dt=a#1.dtDeflt;%
            if(a#1.isPlaying){a#1.isPaused=true;a#1.actnPlayRight();}%
          }%
        \fi%
        \if@anim@pauseframes
          if(a#1.isPlaying&&a#1.pauseAt[a#1.idx]){a#1.actnPause();}%
        \fi%
      \fi%
    };%
    a#1.actnPrev=function(){%
      var curIdx=a#1.idx;%
      \if@anim@palindrome
        if(a#1.idx==0){%
          \if@anim@step
            a#1.playsRight=true;%
          \else
            if(a#1.isPlaying){a#1.isPaused=true;a#1.actnPlayRight();}%
          \fi%
        }else{%
          a#1.idx--;%
        }%
      \else
        if(a#1.idx==0){%
          \if@anim@step\else%
            \if@anim@loop
              if(a#1.isPlaying){%
                \if@anim@chfps
                  a#1.fpsDeflt=Math.abs(\@anim@nfps);%
                  a#1.dtDeflt=1000/(1e-6+a#1.fpsDeflt);%
                  a#1.dt=a#1.dtDeflt;%
                \fi
                a#1.actnPlayLeft();%
              }%
            \else
              a#1.actnEndLeft();%
            \fi%
          \fi%
        }else{%
          a#1.idx--;%
        }%
      \fi
      a#1.fr[curIdx].state=false;%
      a#1.fr[a#1.idx].state=true;%
      \if@anim@step\else%
        \if@anim@chfps
          if(%
            a#1.pFpsAt[a#1.idx]>=0&&%
            a#1.pFpsAt[a#1.idx]!=a#1.fpsDeflt%
          ){%
            a#1.fpsDeflt=a#1.pFpsAt[a#1.idx];%
            a#1.dtDeflt=1000/(1e-6+a#1.fpsDeflt);%
            a#1.dt=a#1.dtDeflt;%
            if(a#1.isPlaying){a#1.isPaused=true;a#1.actnPlayLeft();}%
          }%
        \fi%
        \if@anim@pauseframes
          if(a#1.isPlaying&&a#1.pauseAt[a#1.idx]){a#1.actnPause();}%
        \fi%
      \fi%
    };%
    \if@anim@step\else
      a#1.actnPause=function(){%
        try{app.clearInterval(a#1_int);}catch(e){}%
        a#1.isPlaying=false;%
        a#1.isPaused=true;%
        \if@anim@controls
          a#1.btn['PauseLeft'].state=false;%
          a#1.btn['PlayLeft'].state=true;%
          a#1.btn['PauseRight'].state=false;%
          a#1.btn['PlayRight'].state=true;%
        \fi%
      };%
      a#1.actnPlayRight=function(){%
        try{app.clearInterval(a#1_int);}catch(e){}%
        if(!a#1.isPaused){a#1.actnEndLeft();}%
        a#1.playsRight=true;%
        a#1.isPlaying=true;%
        a#1.isPaused=false;%
        \if@anim@controls
          a#1.btn['PauseLeft'].state=true;%
          a#1.btn['PlayLeft'].state=false;%
          a#1.btn['PauseRight'].state=true;%
          a#1.btn['PlayRight'].state=false;%
        \fi
        a#1_int=app.setInterval('a#1.actnNext()',a#1.dt);%
      };%
      a#1.actnPlayLeft=function(){%
        try{app.clearInterval(a#1_int);}catch(e){}%
        if(!a#1.isPaused){a#1.actnEndRight();}%
        a#1.playsRight=false;%
        a#1.isPlaying=true;%
        a#1.isPaused=false;%
        \if@anim@controls
          a#1.btn['PauseLeft'].state=true;%
          a#1.btn['PlayLeft'].state=false;%
          a#1.btn['PauseRight'].state=true;%
          a#1.btn['PlayRight'].state=false;%
        \fi
        a#1_int=app.setInterval('a#1.actnPrev()', a#1.dt);%
      };%
      \if@anim@controls
        a#1.actnIncr=function(){% speed up animation
          try{app.clearInterval(a#1_int);}catch(e){}%
          a#1.dt/=1.2;%
          if(a#1.isPlaying){%
            if(a#1.playsRight){%
              a#1_int=app.setInterval('a#1.actnNext()',a#1.dt);%
            }else{%
              a#1_int=app.setInterval('a#1.actnPrev()',a#1.dt);%
            }%
          }%
        };%
        a#1.actnDecr=function(){% slow down animation
          try{app.clearInterval(a#1_int);}catch(e){}%
          a#1.dt*=1.2;%
          if(a#1.isPlaying){%
            if(a#1.playsRight){%
              a#1_int=app.setInterval('a#1.actnNext()',a#1.dt);%
            }else{%
              a#1_int=app.setInterval('a#1.actnPrev()',a#1.dt);%
            }%
          }%
        };%
        a#1.actnReset=function(){% reset to default speed
          a#1.dt=a#1.dtDeflt;%
          try{app.clearInterval(a#1_int);}catch(e){}%
          if(a#1.isPlaying){%
            if(a#1.playsRight){%
              a#1_int=app.setInterval('a#1.actnNext()',a#1.dt);%
            }else{%
              a#1_int=app.setInterval('a#1.actnPrev()',a#1.dt);%
            }%
          }%
        };%
      \fi%
    \fi%
  }%
  \if@anim@step\else%
    \if@anim@autoplay
      if(a#1.playsRight){%
        a#1.actnPlayRight();%
      }else{%
        a#1.actnPlayLeft();%
      }%
    \fi%
    \if@anim@autoresume
      if(a#1.isPaused){%
        if(a#1.playsRight){a#1.actnPlayRight();}else{a#1.actnPlayLeft();}%
      }%
    \fi%
  \fi%
}
%other trigger events in the anim widget's AA dictionary
\def\@anim@otherjscript#1{%
  \def\@anim@posterframe{last}%
  \xdef\@anim@otherjscriptkey{%
    /PC <</S/JavaScript/JS (% PageClose
      \if@anim@autopause%
        \if@anim@step\else
          if(a#1.isPlaying||a#1.isPaused){a#1.actnPause();}%
          else{%
        \fi%
      \fi%
      \if@anim@step\else%
        \if@anim@controls
            a#1.playsRight=true;%
        \else%
          \if@anim@palindrome
            a#1.playsRight=true;%
          \fi%
        \fi%
      \fi%
      \ifx\@anim@poster\@anim@posterframe
            a#1.actnEndRight();%
      \else
            a#1.actnEndLeft();%
      \fi%
      \if@anim@autopause%
        \if@anim@step\else
          }
        \fi%
      \fi%
    )>>%
    \if@anim@step\else%
      /D <</S/JavaScript/JS (% pause on MouseDown
        %disable focus rectangle
        app.focusRect=false;%
        if(a#1.isPlaying){a#1.actnPause();}%
      )>>%
    \fi%
    /U <</S/JavaScript/JS (% play/resume on MouseUp
      \if@anim@step%
        \if@anim@palindrome
          if(a#1.playsRight){%
            a#1.actnNext();%
          }else{%
            a#1.actnPrev();%
          }%
        \else
          if(a#1.idx==\@anim@frames-1){%
            a#1.actnEndLeft();%
          }else{%
            a#1.actnNext();%
          }%
        \fi%
      \else
        if(a#1.playsRight){%
          a#1.actnPlayRight();%
        }else{%
          a#1.actnPlayLeft();%
        }%
      \fi%
    )>>%
  }%
}
%actions for control buttons
\def\@anim@upjscript#1#2{%
  \def\@anim@action{#2}%
  \def\@anim@EndLeft{EndLeft}%
  \def\@anim@StepLeft{StepLeft}%
  \def\@anim@PlayPauseLeft{PlayPauseLeft}%
  \def\@anim@PlayPauseRight{PlayPauseRight}%
  \def\@anim@StepRight{StepRight}%
  \def\@anim@EndRight{EndRight}%
  \def\@anim@Minus{Minus}%
  \def\@anim@Reset{Reset}%
  \def\@anim@Plus{Plus}%
  \xdef\@anim@upjscriptstring{%
    app.focusRect=false;%
    \ifx\@anim@action\@anim@EndLeft
      a#1.actnEndLeft();%
    \else%
    \ifx\@anim@action\@anim@StepLeft%
      \if@anim@step
        a#1.actnPrev();%
      \else
        if(!a#1.isPlaying){a#1.isPaused=true;a#1.actnPrev();}%
      \fi%
    \else%
    \ifx\@anim@action\@anim@PlayPauseLeft
      if(a#1.isPlaying){a#1.actnPause();}%
      else{a#1.actnPlayLeft();}%
    \else%
    \ifx\@anim@action\@anim@PlayPauseRight
      if(a#1.isPlaying){a#1.actnPause();}%
      else{a#1.actnPlayRight();}%
    \else%
    \ifx\@anim@action\@anim@StepRight%
      \if@anim@step
        a#1.actnNext();%
      \else
        if(!a#1.isPlaying){a#1.isPaused=true;a#1.actnNext();}%
      \fi%
    \else%
    \ifx\@anim@action\@anim@EndRight
      a#1.actnEndRight();%
    \else%
    \ifx\@anim@action\@anim@Minus
      a#1.actnDecr();%
    \else%
    \ifx\@anim@action\@anim@Reset
      a#1.actnReset();%
    \else%
    \ifx\@anim@action\@anim@Plus
      a#1.actnIncr();%
    \fi\fi\fi\fi\fi\fi\fi\fi\fi%
  }%
}
